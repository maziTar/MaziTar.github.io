{"version":3,"sources":["./src/app/weather/weather-container.component.html","./src/app/shared/models/favorities.models.ts","./src/app/weather/weather-container.component.scss","./src/app/weather/weather-container.component.ts","./src/app/weather/weather-routing.module.ts","./src/app/weather/weather.module.ts"],"names":[],"mappings":"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","file":"weather-weather-module-es2015.js","sourcesContent":["export default \"<div class=\\\"weather-container\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n  <h1>Forecast for the next 5 days</h1>\\n  <form>\\n    <mat-form-field>\\n      <input [formControl]=\\\"weatherSearchControl\\\" [matAutocomplete]=\\\"auto\\\" aria-label=\\\"Number\\\" matInput\\n             placeholder=\\\"Find a city's weather\\\"\\n             type=\\\"text\\\">\\n      <mat-autocomplete #auto=\\\"matAutocomplete\\\" (optionSelected)=\\\"onAutocompleteSelection($event)\\\"\\n                        [displayWith]=\\\"displayAutoCompleteFn\\\">\\n        <mat-option *ngFor=\\\"let option of filteredOptions$ | async\\\" [value]=\\\"option\\\">\\n          {{option.localizedName}}\\n        </mat-option>\\n      </mat-autocomplete>\\n    </mat-form-field>\\n  </form>\\n  <mat-card *ngIf=\\\"currentWeatherData$ | async as currentWeatherData\\\" fxLayout=\\\"column\\\"\\n            fxLayoutGap=\\\"2rem\\\">\\n\\n    <div *ngIf=\\\"selectedAutoCompleteOption$ | async as autocompleteSelected\\\" class=\\\"main-header\\\"\\n         fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-between start\\\">\\n      <div fxLayout=\\\"row wrap\\\" fxLayout.lt-sm=\\\"row\\\" fxLayoutAlign=\\\"start\\\">\\n        <img [src]=\\\"iconsGeneratorFunc(currentWeatherData.weatherIcon)\\\" alt=\\\"weather icon\\\" class=\\\"img-responsive\\\"\\n             height=\\\"45\\\"\\n             typeof=\\\"foaf:Image\\\">\\n        <mat-card-title-group>\\n          <mat-card-title>{{autocompleteSelected.localizedName}}</mat-card-title>\\n          <mat-card-subtitle>\\n            {{currentWeatherData.temperature.Value}} C°\\n          </mat-card-subtitle>\\n        </mat-card-title-group>\\n      </div>\\n\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" fxLayoutGap=\\\"0.5rem\\\">\\n        <mat-icon>favorite</mat-icon>\\n        <button (click)=\\\"handleFavoriteEvent(currentWeatherData)\\\" mat-raised-button>\\n          {{ (isCurrentCityExistInFavoriteList$ | async) ? 'Remove From Favorites' : 'Add To Favorites' }}\\n        </button>\\n      </div>\\n    </div>\\n    <mat-card-title fxLayoutAlign=\\\"center center\\\">\\n      {{currentWeatherData.weatherText}}\\n    </mat-card-title>\\n\\n    <mat-card-content *ngIf=\\\"!!(selectedLocationFiveDailyDetails$ | async)\\\" fxLayout=\\\"row wrap\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutGap=\\\"2rem\\\">\\n      <mat-card *ngFor=\\\"let day of selectedLocationFiveDailyDetails$ | async\\\" fxLayout=\\\"column\\\" class=\\\"inner-forecast-cards\\\"\\n                fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"0.5rem\\\">\\n        <img [src]=\\\"iconsGeneratorFunc(day.DayIcon)\\\" alt=\\\"weather icon\\\" class=\\\"img-responsive\\\" mat-card-avatar\\n             typeof=\\\"foaf:Image\\\">\\n        <mat-card-header fxLayoutAlign=\\\"center center\\\">\\n          <mat-card-title>{{day.Date | date : 'EEEE' }}</mat-card-title>\\n          <mat-card-subtitle>{{day.Temperature.Maximum.Value}} C° - {{day.Temperature.Minimum.Value }} C°\\n          </mat-card-subtitle>\\n        </mat-card-header>\\n      </mat-card>\\n    </mat-card-content>\\n  </mat-card>\\n</div>\\n\\n\"","export class WeatherLocationFavorite {\r\n  key: string;\r\n  name: string;\r\n  degrees: number;\r\n  currentWeatherText: string;\r\n  icon: number;\r\n\r\n  constructor(name: string, degrees: number, currentWeatherText: string, icon: number, key: string) {\r\n    this.key = key;\r\n    this.name = name;\r\n    this.degrees = degrees;\r\n    this.currentWeatherText = currentWeatherText;\r\n    this.icon = icon;\r\n  }\r\n}\r\n","export default \".weather-container {\\n  padding: 1rem;\\n}\\n.weather-container h1 {\\n  -webkit-margin-before: 0;\\n          margin-block-start: 0;\\n  -webkit-margin-after: 0;\\n          margin-block-end: 0;\\n}\\n.weather-container ::ng-deep mat-card .mat-card-header-text {\\n  margin: 0;\\n}\\n.weather-container .main-header {\\n  margin: 1rem 1rem 0 0;\\n}\\n.weather-container mat-card-content {\\n  margin: 0 1rem 1rem 1rem;\\n}\\n.weather-container .inner-forecast-cards {\\n  margin-top: 2rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2VhdGhlci9DOlxcRGV2XFxNYXppVGFyMjIxMTIwMTlfTmdyeC9zcmNcXGFwcFxcd2VhdGhlclxcd2VhdGhlci1jb250YWluZXIuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3dlYXRoZXIvd2VhdGhlci1jb250YWluZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0FDQ0Y7QURDRTtFQUNFLHdCQUFBO1VBQUEscUJBQUE7RUFDQSx1QkFBQTtVQUFBLG1CQUFBO0FDQ0o7QURHSTtFQUNFLFNBQUE7QUNETjtBREtFO0VBQ0UscUJBQUE7QUNISjtBRE1FO0VBQ0Usd0JBQUE7QUNKSjtBRE9FO0VBQ0UsZ0JBQUE7QUNMSiIsImZpbGUiOiJzcmMvYXBwL3dlYXRoZXIvd2VhdGhlci1jb250YWluZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIud2VhdGhlci1jb250YWluZXIge1xyXG4gIHBhZGRpbmc6IDFyZW07XHJcblxyXG4gIGgxIHtcclxuICAgIG1hcmdpbi1ibG9jay1zdGFydDogMDtcclxuICAgIG1hcmdpbi1ibG9jay1lbmQ6IDA7XHJcbiAgfVxyXG5cclxuICA6Om5nLWRlZXAgbWF0LWNhcmQge1xyXG4gICAgLm1hdC1jYXJkLWhlYWRlci10ZXh0IHtcclxuICAgICAgbWFyZ2luOiAwO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLm1haW4taGVhZGVyIHtcclxuICAgIG1hcmdpbjogMXJlbSAxcmVtIDAgMDtcclxuICB9XHJcblxyXG4gIG1hdC1jYXJkLWNvbnRlbnQge1xyXG4gICAgbWFyZ2luOiAwIDFyZW0gMXJlbSAxcmVtO1xyXG4gIH1cclxuXHJcbiAgLmlubmVyLWZvcmVjYXN0LWNhcmRze1xyXG4gICAgbWFyZ2luLXRvcDogMnJlbTtcclxuICB9XHJcblxyXG59XHJcblxyXG4iLCIud2VhdGhlci1jb250YWluZXIge1xuICBwYWRkaW5nOiAxcmVtO1xufVxuLndlYXRoZXItY29udGFpbmVyIGgxIHtcbiAgbWFyZ2luLWJsb2NrLXN0YXJ0OiAwO1xuICBtYXJnaW4tYmxvY2stZW5kOiAwO1xufVxuLndlYXRoZXItY29udGFpbmVyIDo6bmctZGVlcCBtYXQtY2FyZCAubWF0LWNhcmQtaGVhZGVyLXRleHQge1xuICBtYXJnaW46IDA7XG59XG4ud2VhdGhlci1jb250YWluZXIgLm1haW4taGVhZGVyIHtcbiAgbWFyZ2luOiAxcmVtIDFyZW0gMCAwO1xufVxuLndlYXRoZXItY29udGFpbmVyIG1hdC1jYXJkLWNvbnRlbnQge1xuICBtYXJnaW46IDAgMXJlbSAxcmVtIDFyZW07XG59XG4ud2VhdGhlci1jb250YWluZXIgLmlubmVyLWZvcmVjYXN0LWNhcmRzIHtcbiAgbWFyZ2luLXRvcDogMnJlbTtcbn0iXX0= */\"","import {Component, OnInit} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {Observable} from 'rxjs';\nimport {debounceTime, filter, map, startWith, switchMap, take, tap} from 'rxjs/operators';\n\nimport {MatAutocompleteSelectedEvent} from '@angular/material';\nimport {ACCUWEATHER_API_DEFAULT_AUTOCOMPLETE_SEARCH} from '../shared/consts/weather.consts';\nimport {IACCUWeatherAutocompleteResponse} from '../shared/models/weather-response.models';\nimport {WeatherLocationFavorite} from '../shared/models/favorities.models';\nimport * as fromRoot from '../store/reducers';\nimport {Store} from '@ngrx/store';\nimport * as weatherActions from '../store/actions/weather.actions';\nimport * as favActions from '../store/actions/favorites.actions';\n\nimport {\n  ACCUWeatherAutocompleteViewModel,\n  CurrentConditionsViewModel,\n  IDailyForecastViewModel\n} from '../shared/models/weather-view.models';\nimport {iconsGeneratorFunc} from '../shared/services/util.service';\n\n\n@Component({\n  selector: 'app-weather-container',\n  templateUrl: './weather-container.component.html',\n  styleUrls: ['./weather-container.component.scss']\n})\nexport class WeatherContainerComponent implements OnInit {\n\n  public weatherSearchControl = new FormControl();\n  public iconsGeneratorFunc = iconsGeneratorFunc;\n  public filteredOptions$: Observable<ACCUWeatherAutocompleteViewModel[]>;\n  public selectedLocationFiveDailyDetails$: Observable<IDailyForecastViewModel[]>;\n  public currentWeatherData$: Observable<CurrentConditionsViewModel>;\n  public selectedAutoCompleteOption$: Observable<ACCUWeatherAutocompleteViewModel>;\n\n  public isCurrentCityExistInFavoriteList$: Observable<boolean>;\n  private favorites$: Observable<WeatherLocationFavorite[]>;\n  private allAutocompleteOptions$: Observable<ACCUWeatherAutocompleteViewModel[]>;\n  private searchString = '';\n\n\n  constructor(private store: Store<fromRoot.State>) {\n  }\n\n  ngOnInit() {\n    this.store.select(fromRoot.getSelectedFavorite).pipe(take(1)).subscribe((data) => {\n      const isFavorite = !!data;\n      const defaultVal = ACCUWEATHER_API_DEFAULT_AUTOCOMPLETE_SEARCH;\n      const key = isFavorite ? data.key : defaultVal.key;\n      const localizedName = isFavorite ? data.name : defaultVal.localizedName;\n\n      this.store.dispatch(weatherActions.setAutocompleteSelectedValue(\n        {data: new ACCUWeatherAutocompleteViewModel({LocalizedName: localizedName, Key: key})}));\n      this.store.dispatch(weatherActions.getCurrentSelectedPlaceWeather({data: key}));\n      this.store.dispatch(weatherActions.getFiveDailyWeatherForecasts({data: key}));\n      this.store.dispatch(favActions.setSelectedFavorite({data: null}));\n\n      this.filteredOptions$ = this.store.select(fromRoot.getAutocompleteResults);\n      this.selectedAutoCompleteOption$ = this.store.select(fromRoot.getAutocompleteSelected);\n      this.favorites$ = this.store.select(fromRoot.getFavoritesArray);\n      this.isCurrentCityExistInFavoriteList$ = this.store.select(fromRoot.getIsCurrentCityExistInFavoriteList);\n      this.checkIfCurrentCityExistInFavoriteArray();\n\n      this.setCurrentWeather();\n      this.setDailyForecasts();\n      this.setFilersSubscriptions();\n    });\n  }\n\n  public displayAutoCompleteFn(option: IACCUWeatherAutocompleteResponse): string {\n    return option ? option.LocalizedName : null;\n  }\n\n  public onAutocompleteSelection(selectionEvent: MatAutocompleteSelectedEvent) {\n    const selectedValue: ACCUWeatherAutocompleteViewModel = selectionEvent.option.value;\n    this.store.dispatch(weatherActions.setAutocompleteSelectedValue({data: selectedValue}));\n    this.store.dispatch(weatherActions.getCurrentSelectedPlaceWeather({data: selectedValue.key}));\n    this.store.dispatch(weatherActions.getFiveDailyWeatherForecasts({data: selectedValue.key}));\n    this.checkIfCurrentCityExistInFavoriteArray();\n  }\n\n  public handleFavoriteEvent(currentSelectionData: CurrentConditionsViewModel) {\n    this.favorites$.pipe(\n      take(1),\n      tap(((favData = []) => {\n          this.selectedAutoCompleteOption$.pipe(take(1)).subscribe((autoData) => {\n            const isFavExist = !!favData.find(fav => fav.key === autoData.key);\n            this.store.dispatch(weatherActions.setCurrentCityExistInFavoriteList(\n              {data: isFavExist}));\n            const favorite = new WeatherLocationFavorite(\n              autoData.localizedName,\n              currentSelectionData.temperature.Value,\n              currentSelectionData.weatherText,\n              currentSelectionData.weatherIcon,\n              autoData.key\n            );\n            if (!isFavExist) {\n              this.store.dispatch(favActions.addToFavorites(\n                {data: favorite}));\n            } else {\n              this.store.dispatch(favActions.removeFromFavorites(\n                {data: favorite}));\n            }\n            this.store.dispatch(weatherActions.setCurrentCityExistInFavoriteList(\n              {data: !isFavExist}));\n          });\n        }),\n      )).subscribe();\n  }\n\n  private checkIfCurrentCityExistInFavoriteArray() {\n    this.favorites$.pipe(\n      take(1),\n      tap(((favData = []) => {\n          this.selectedAutoCompleteOption$.pipe(take(1)).subscribe((autoData) => {\n            const isFavExist = !!favData.find(fav => fav.key === autoData.key);\n            this.store.dispatch(weatherActions.setCurrentCityExistInFavoriteList(\n              {data: isFavExist}));\n          });\n        }),\n      )).subscribe();\n  }\n\n  private setFilersSubscriptions() {\n    this.allAutocompleteOptions$ = this.weatherSearchControl.valueChanges.pipe(\n      startWith(''),\n      // TODO - move to the store\n      tap((searchStr) => this.searchString = searchStr),\n      debounceTime(500),\n      tap(searchText => {\n        this.store.dispatch(weatherActions.getWeatherAutocomplete({data: searchText}));\n      }),\n      switchMap(() => this.store.select(fromRoot.getAutocompleteResults))\n    );\n\n    this.filteredOptions$ = this.allAutocompleteOptions$.pipe(\n      startWith(''),\n      filter(opt => !!opt),\n      map((options: ACCUWeatherAutocompleteViewModel[]) =>\n        options.filter((opt) => opt.localizedName && !!this.searchString ?\n          opt.localizedName.toLowerCase().includes(String(this.searchString).toLowerCase()) : null)\n      ));\n  }\n\n  private setDailyForecasts() {\n    this.selectedLocationFiveDailyDetails$ = this.store.select(fromRoot.getFiveDaysForecast);\n  }\n\n  private setCurrentWeather() {\n    this.currentWeatherData$ = this.store.select(fromRoot.getCurrentSelectedData);\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {WeatherContainerComponent} from './weather-container.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: 'main'\n  },\n  {\n    path: 'main',\n    component: WeatherContainerComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class WeatherRoutingModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {WeatherContainerComponent} from './weather-container.component';\nimport {AppCommonModule} from '../app-common/common.module';\nimport {WeatherRoutingModule} from './weather-routing.module';\nimport {SharedModule} from '../shared/shared.module';\n\n@NgModule({\n  declarations: [WeatherContainerComponent],\n  imports: [\n    CommonModule,\n    AppCommonModule,\n    WeatherRoutingModule,\n    SharedModule\n  ]\n})\nexport class WeatherModule {\n}\n"],"sourceRoot":"webpack:///"}